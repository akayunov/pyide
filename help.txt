нужно не сравнивать где там символ переноса строки или не переноса и спрашивать у браузера какой ширины этот символ
и если она нулевая то пропускать его при все оперециях движения ну и спрашивать каждый раз долго поэтому сделать не инвалидируемый кеш: символ -- ширина


можно сделать кастомный спан для кода и на изменения какого нить атрибута заставлять его самомго себя обновлять
тока если объявлять его через "is" то чото страница большая получиться качать трафика много надо будет

==== infrastructure ===
0) минификатор не работает? смотри main.js
сменить юзера в торнадовском контейнере
    после того как научу сохранять файлы чтоб понять кем сохранять что бпотом не было проблем с пермиссиями



    === long ===
1) делать docker build в тревисе и пушит образы в реджистри - ага а пароль я где сохраню блаблабла
5) сделать питон пакадж и на ci ставить его а не мапать сорсы и устанавливать переменную PYTHONPATH в докер файле
    но этож будет тока для релиза а для девелопмента то как?
    ну почему пусть на тревисе все собирается на каждый комит  а чо нет то а на локальной машине по старинке чезел моунт
6) в будущем прийдеться контейнеры тэгировать версиями - пока конечно не к чему
4) код каверадж поглядеть для js и линтеры ESLint

==== code ===
6) сделать доступ к логам из веб мордыб логи долго не хранить

5) принт буферизованный в докере - не видно своей отладки и рестар так себе контейнейр то меняется постоянно поэтому docker logs -f плоховато работает
    пробуй python -u  или у принта есть флаг flash или логер свой сделать который будет флашить каждый ввызов(тогда убрать -u из компос файла)

1) подсветку по краям цветастую можно сделать динамической по наведению курсора
2) fuzzy search - на соундексе сделать например, или ваще бить как еласти на н граммы или ваще еластик включить да и не париться

тоесть при удалении строк
    убираем из self.line_structure соответвующие строки, перебиваем значения в LineNo.юcreated_lineno(и ключи и значения номеров строк)
    вызываем self.convert_to_scope_id_structure чтоб перебилдать скопы, наклиент отправлять ничего не надо там и так все будет хорошо

скорее всего память будет течь из-за того что все на все ссылается видимо надо будет рестартать процессы иногда

при добавлении тоже самое но надо научить парсать только часть и с какой то позиции учитывая индент
    чтоб можно было парсать только новые строки и оттправлять что то на клиент
    так это же не сложно, если вставляется сразу много строк то можно выбирать индент такой какой будет правильным типа равняться на отступ первой строки
    парсаем все вниз новое и обновляем струтуры - не то чтобы сложно


5) сделать спел чекер для текстовый файлов
6) тесты на мемори лики

7) копи пасты обрабатывать через сервер
    то есть отправлять на сревер - парсить а потом уже вставлять
8) ентеры всегда оборачивать в span
